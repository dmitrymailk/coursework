{"title": "How to Maximize Your Enterprise Software Purchase", "data": [{"type": "subtitle", "content": "The definitive tips for success"}, {"type": "subtitle", "content": "Don\u2019t light money on fire when you don\u2019t have to"}, {"type": "image", "content": "https://miro.medium.com/max/12000/0*fFTB-UPq0oqxTzOs"}, {"type": "sentence", "content": "When consumer software companies build new features, the first step is talking to their current or prospective users. They want those users to buy or adopt the new feature, so they need to know what they want. This virtuous cycle keeps product features lean, intuitive, and agile. Bad user experience (UX) drives away users and hits the bottom line."}, {"type": "sentence", "content": "But enterprise software is different."}, {"type": "sentence", "content": "Whether building internally or buying off the shelf, the decision making process typically does not include talking to users at all. The software is not there to delight the user \u2014 a catch phrase often used to describe excellent UX \u2014 but to serve another purpose such as save money, solve a data integrity problem, improve employee workflow, or maximize productivity."}, {"type": "sentence", "content": "That\u2019s because you, the buyer, are not the user."}, {"type": "sentence", "content": "This is not rocket science. Of course, big software purchases are made by senior leaders; they tend to be significant investments."}, {"type": "sentence", "content": "The problem is that you need your users to actually use the software. When you forget the user in your purchase decision, you\u2019re far more likely to wind up with software that has terrible UX. I often see companies ignore this problem. \u201cWe\u2019ll just make everyone use the software and then everything will be fine,\u201d they say. We\u2019ll put it in the company manual!"}, {"type": "sentence", "content": "Wrong."}, {"type": "sentence", "content": "Your employees are humans. Human nature is to avoid the distasteful. Not only does mandating mind-numbingly bad software crush employee morale, it\u2019s also demoralizing in another way: it says to your employees that you don\u2019t care enough about them to even give them the tools to do their jobs. You\u2019re setting them up to fail."}, {"type": "sentence", "content": "The result is that your employees will avoid using the new tool or try to delegate the task to someone else, like an admin who may not have all the information they need. The result will be unusable data, irritated employees, and/or the problem you were trying to solve not being solved. You may have just lit a whole bunch of money on fire."}, {"type": "subtitle", "content": "The Four Maladies"}, {"type": "sentence", "content": "When I work with companies who are implementing or on the market to buy new enterprise software, I typically see four ailments."}, {"type": "sentence", "content": "I once was responsible for a customer relationship management system that none of the sales people actually used. I even had one executive tell me she would never use it, because \u201cdata entry was for admins.\u201d The software was there to help her manage her pipeline. It was supposed to be a tool, not a data entry exercise, yet somehow it had morphed into one."}, {"type": "sentence", "content": "In an ideal world, she would have been walking out of a client meeting and typing a few notes about insights and next steps in the app to share with her team. Instead, she would email her admin her notes and the admin would type them in. Or worse, she\u2019d keep the information in a spreadsheet that lived on her hard drive or simply in her head. The firm had a small army of administrative personnel who were entering and cleaning data."}, {"type": "sentence", "content": "The firm tried to mandate using the tool. Sales people didn\u2019t get credit for leads they didn\u2019t put in the system. This is the classic \u201cif it\u2019s not in the system, it doesn\u2019t exist\u201d strategy. We started pulling data from the system and showing it live in meetings to embarrass people into updating it before they had to explain what was wrong with their records in front of everyone else."}, {"type": "sentence", "content": "None of this worked. It did make a lot of people really annoyed though. It also perpetuated some political games internally where senior sales folks would push the envelope as far as they could with noncompliance. No one ever got fired for failing to keep their lead records up to date."}, {"type": "sentence", "content": "The problem was the software sucked. It took way too many steps to open a new record. The workflow was super complicated. The labels on the fields were often open to interpretation. It forced reentry of the same data multiple times in multiple places. We had a sales team on the road, yet the platform had so much technical debt that the app version couldn\u2019t load complete records. Many features didn\u2019t even work in the app version at all, in part because there were too many features to start with."}, {"type": "sentence", "content": "As you might have guessed by now, they had a bad case of all four ailments: featuritis, trainuritis, out-of-touch-uritis and automationitis."}, {"type": "subtitle", "content": "Featuritis"}, {"type": "sentence", "content": "Talk to any consumer software product person and they\u2019ll tell you they live by one rule: keep it simple. Particularly in beta."}, {"type": "sentence", "content": "Otherwise, you won\u2019t know if your features accomplish your goal. You\u2019ll also probably really confuse your users."}, {"type": "sentence", "content": "That\u2019s because your users are not a blank slate. They have used other software before \u2014 maybe even yours \u2014 and they have certain expectations. These could be based on former software they\u2019ve used at your company or just being humans with smartphones and computers. Your employees do actually have a life outside of work, and that life probably involves a lot of devices."}, {"type": "sentence", "content": "Over time, we accumulate unconscious expectations. We expect the menu to be in the top right or top left. We expect to be able to search a page. We expect to be able to sort. We recognize common icons like the hamburger, the three dots, and the magnifying glass. We know what they mean."}, {"type": "sentence", "content": "I realize that a software purchase can be a big corporate decision. Maybe you\u2019ve worked several months to get approval for the funding. It\u2019s now or never, you have to squeeze everything you ever wanted this software to do out of it RIGHT NOW."}, {"type": "sentence", "content": "Or, maybe, you\u2019ve lead an internal process to gather feedback from everyone under the sun at your firm about what they want the software to do. And it\u2019s a long list. You feel compelled to make everyone happy so the rollout goes well."}, {"type": "sentence", "content": "Stop. This will backfire, I guarantee it."}, {"type": "sentence", "content": "You\u2019ll wind up with NASA level software that can do everything short of cure cancer, and unhappy employees, bad data quality, and lost productivity."}, {"type": "subtitle", "content": "Start simple"}, {"type": "sentence", "content": "If you\u2019re building internally, start with a list of core features, and then add over time. Or ask your vendor to buy just the basics and upgrade later. You may have to change your funding proposal approach. Pitch your funding ask as a total expenditure, but spend it in chunks. Or budget for installments. Ironically, this will save you money because you\u2019ll spend less fixing it later and you\u2019ll get more value out of the tool in the first place if people actually use it."}, {"type": "image", "content": "https://miro.medium.com/max/5120/0*p49PGLkACZXwIUbZ"}, {"type": "subtitle", "content": "Trainuritis"}, {"type": "sentence", "content": "When you bought your latest smartphone, did it come with an instruction manual? Did you sit through 4 hours of iOS or Android training to learn how to use your new iPhone or Samsung? Of course not."}, {"type": "sentence", "content": "That\u2019s because smartphone operating systems are built to be intuitive."}, {"type": "sentence", "content": "Now think about [insert any common enterprise software]. Were you trained? Were there secret buttons hidden three deep in menus with unintuitive names? Did the software have funny little workflow bugs like you had to do x screen before y screen or it would error out? I bet you took copious notes during your training session. You may still have those notes, and have to pull them out periodically when you forget how to do a specific task you don\u2019t do every day. In the back of your mind, you may actively come up with reasons to avoid doing that task just because you can\u2019t remember where you stuck those darn notes."}, {"type": "sentence", "content": "Then there is the problem of new employees. It\u2019s all well and good to train the ones you have, but you\u2019ll have new ones, at some point. This training cost just went from a one time expenditure to an ongoing drip, drip, drip of money out of your budget."}, {"type": "sentence", "content": "Whether you\u2019re building custom in house or buying off the shelf, there is a shockingly low amount of user testing with enterprise software. And frankly, it makes sense. Why? Because the buyer is not the user. The internal IT team who built that custom module for you is not going ultimately to use it. Similarly, the enterprise software company who built that off the shelf platform is building it for you, the person who\u2019s going to sign the contract, not your employees. They want to make sure it solves all those problems you\u2019re trying to solve, because that\u2019s what gets you to sign the deal. Whether your users use the software is not their problem, particularly if you signed a multi-year deal."}, {"type": "sentence", "content": "I admit: I\u2019m generalizing. It\u2019s been promising that the latest generation of enterprise software has started to break out of this habit, in part because startups demand better UX and are far less tolerant of software that sucks. But there is plenty of software out there on the market that falls into this trap. In my experience, the worst UX comes from the biggest enterprise software companies, maybe because they are so big they are even further away from the user than the nimble enterprise tech startup."}, {"type": "subtitle", "content": "Test, test, test"}, {"type": "sentence", "content": "If you\u2019re building internally, you need to put your prototypes in front of your employees before you even start building. Can they figure out how to use the new software without you explaining it to them? As you iterate and build your first versions, do this over and over again, ideally with a new crop each round. Once someone has seen a prior version, they\u2019re biased."}, {"type": "sentence", "content": "If you\u2019re buying off the shelf, ask the vendor for a trial period and then put the software in the hands of the actual employees who will use it. Can they figure it out on their own? Can they do the tasks you want the software to do \u2014 why you\u2019re buying it after all \u2014 the first time and correctly? If the answer is no, keep looking. Good software doesn\u2019t require training."}, {"type": "subtitle", "content": "Out-of-touch-uritis"}, {"type": "sentence", "content": "Many companies deploy new enterprise software to solve a specific problem. We can\u2019t do X, we can\u2019t look up Y, we have no visibility into Z. The focus is on that problem and whether the software actually solves it, instead of understanding why the problem came about in the first place."}, {"type": "sentence", "content": "This is where consumer software again provides some helpful guidance. When product managers in consumer tech build new features, they start with a customer journey map. A customer journey map is not a software workflow. It\u2019s an activity map, on to which you layer software usage. It recognizes that people do things in different ways, sometimes very unintuitively different ways."}, {"type": "sentence", "content": "This approach is essentially the opposite of how many companies think about enterprise software. You have to understand the problem before you can solve it. That means understanding where the activity runs into roadblocks, before you jump to conclusions. You\u2019re assuming your employees are all robots who all do activities in one single streamlined and linear manner."}, {"type": "image", "content": "https://miro.medium.com/max/6964/0*47jvGeoClKkm5Ra4"}, {"type": "sentence", "content": "Let\u2019s say the issue is you don\u2019t have visibility into overhead dollars being spent on business development. You think the numbers are way too low, given the state of your pipeline and what you observe amongst the staff, and your general overhead numbers are really high. You think it\u2019s just that people are not submitting their timesheets on time, so they forget how much time they spent on BD. You set up a nice email notification reminder and an escalation process for timesheets more than a day late. But the BD numbers stay low. Your email notification system is barely used."}, {"type": "sentence", "content": "Had you talked to some employees and mapped out their customer journey \u2014 and your employees are your customers, just internal ones \u2014 you would have realized that the issue was how hard it was to find the BD charge codes in your timekeeping system. People were actually submitting timesheets everyday. Oops. You should have more deeply understood how your employees actually use the timekeeping system, and their pain points with its user experience."}, {"type": "subtitle", "content": "Shadow and map"}, {"type": "sentence", "content": "Sit with a handful of employees and map out what they do everyday, focusing on times they\u2019re doing BD. Ask a lot of questions. What do they do first, second and third? What tools do they do to complete those activities? Why do they do it that way?"}, {"type": "sentence", "content": "Then understand where your software fits into their daily business. Is it at point A, B or C? Do they ever use it on mobile? What is the purpose of the current system in their view? (If it\u2019s a timekeeping system, the answer might be a huge annoying headache.)"}, {"type": "subtitle", "content": "Using software as a bandaid"}, {"type": "sentence", "content": "It is very tempting to think software is the next panacea. We\u2019ll just fix this [enter annoying business problem of your choice] by automating it! The worst IT implementations I\u2019ve seen have involved this exact scenario."}, {"type": "sentence", "content": "This varies from situation to situation, but more than likely the problem is far deeper than a software quick fix. What is far more likely to occur is that you will exacerbate the underlying problem further by adding another level of complexity. You may have even spent dollars training your employees on the new tool."}, {"type": "sentence", "content": "In general, software doesn\u2019t solve problems. It is only a tool to implement a solution, not the solution itself."}, {"type": "image", "content": "https://miro.medium.com/max/10368/0*hYMh3WMl-vgkRzUp"}, {"type": "subtitle", "content": "More mapping"}, {"type": "sentence", "content": "Just as you should map your user experience, you also should map any business process prior to adding a software solution to it. This not only will inform whether you are solving the right problem, but also whether the software\u2019s role fits into the right part of the business process. Guess who knows your business processes the best? The people who do them every day, aka, your users."}, {"type": "sentence", "content": "Once your business processes are in order, then software can do you wonders. But you can\u2019t cure cancer with a bandaid."}, {"type": "image", "content": "https://miro.medium.com/max/6602/0*n59qULrK9L_whIEG"}, {"type": "subtitle", "content": "Hints you need to course correct"}, {"type": "sentence", "content": "You may already be in the middle of this type of situation. Here are a few indicators that you need to rethink:"}, {"type": "sentence", "content": "Enterprise software has made great strides to be more simple and usable off the shelf, but it will always suffer from a fundamental mismatch: the buyer is not the user. That means if you\u2019re thinking about building internally or buying off the shelf, you need to be putting your users front and center. They should be part of the process from start to finish. Even the most powerful software in the world isn\u2019t worth a dime if no one will use it."}, {"type": "subtitle", "content": "A note from the Plain English team"}, {"type": "sentence", "content": "Did you know that we have four publications and a YouTube channel? You can find all of this from our homepage at plainenglish.io \u2014 show some love by giving our publications a follow and subscribing to our YouTube channel!"}], "topic": "ux"}