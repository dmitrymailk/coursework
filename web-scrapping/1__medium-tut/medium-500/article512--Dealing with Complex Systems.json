{"title": "Dealing with Complex Systems", "data": [{"type": "sentence", "content": "In 1967 a computer programmer named Melvin Conway defined what it meant to ship the organisation (org) chart. It\u2019s worth noting though that this is something that doesn\u2019t uniquely apply to software, and many complex products throughout history have some version of this. In fact, Conway\u2019s original paper is mostly not about software, but about any complex system designed by groups of people."}, {"type": "image", "content": "https://miro.medium.com/max/1600/0*RdXeHR6RU2SgVm6s"}, {"type": "sentence", "content": "Audi ships the org chart circa 2001. Sensitive electronics for the navigation system controls added right next to the cup holder because Infotainment Systems and Vehicle Interior teams not well coordinated."}, {"type": "sentence", "content": "This may be controversial, but Conway\u2019s Law is fundamentally unavoidable. Many of the issues we have to work through occur because of human nature. Conway\u2019s Law and Brooks\u2019 Law are both about communication channels and what happens as you increase their complexity. The problem with that of course is that as projects grow, more people are added, which means that more communications channels become necessary."}, {"type": "sentence", "content": "Let\u2019s look at an example to illustrate. Let\u2019s say that 5 classmates decide to form a startup after graduation. In this very early stage, we can determine that each person has 10 communication channels using Brooks\u2019 group intercommunication formula: n(n \u2212 1) / 2. What does this feel like? There is a lot of high bandwidth communication, everyone is talking to each other, and there is low specialization \u2014 people are likely doing 1 main job but also doing part of 1 or 2 other jobs as they cover bases for each other."}, {"type": "sentence", "content": "The startup has some early success, so they hire another 5 people. Now there are 45 communication channels. What does this feel like? It\u2019s harder to keep up and stay on top of everything going on. More specialization emerges, both out of necessity for the business, but also as people try to stay focused and keep their heads down. Even within a discipline, people start to parcel up jobs to be done. For software engineers, this likely means factoring the code so that someone is working on front end, back end, storage and data systems, etc."}, {"type": "sentence", "content": "The startup experiences rapid growth, and they hire 40 more people. Now each person would have a whopping 1225 communication channels, way too much for anyone to use effectively."}, {"type": "sentence", "content": "This is where teams come in. At 5 people or even 10 people, the org can be flat and communications are mostly between individuals or ad hoc groups. This clearly breaks down at 50 people, and at 500 or 5000 people would just be an unruly mob. Teams not only help people get appropriate manager support (imagine doing PSC for 50 directs) they\u2019re also a way of flattening the comms channels. If in your 50 person org you have 5 teams of 10 people, you can flatten back to 10 team comms channels. You\u2019ll have other informal and ad hoc channels, but to coordinate your work across 5 teams you can do it with 10 channels."}, {"type": "image", "content": "https://miro.medium.com/max/1860/0*gO3a6DXuMJ8JUvOo"}, {"type": "sentence", "content": "Everyone reading this should be fairly familiar with what it feels like to work in an organization like this. There is typically high bandwidth conversation happening within your local team, but less happening between teams. Not only is there some local team specialization, but also whole teams start to specialize. Teams can also start to form very distinct local cultures and practices. It might feel very different to work on a team iterating on a critical live service vs. one building long lead components that haven\u2019t shipped yet."}, {"type": "sentence", "content": "Again, this is not only inevitable, but essential. The ability to specialize as a group grows unlocks a lot of capability, and means that teams can really focus on one thing and hire the specific talent needed to build it."}, {"type": "sentence", "content": "Creating separate teams then inherently causes you to confront Conway\u2019s Law. The output of the system takes on the shape of the system. This is really easy to demonstrate if you imagine the hypothetical team above as an automobile company. You might have one team doing chassis design, another doing engine and drivetrain, another doing interior, another designing the bodywork, and the last team responsible for electrical systems. The car that they produce clearly looks like the output of these organizations. When the overall system is well coordinated you might wind up with an excellent car, but if it\u2019s not you\u2019ll see the Audi example above. It\u2019s important to understand that Conway\u2019s Law isn\u2019t an inherently bad thing like Murphy\u2019s Law. There are *fantastic* products that still inherently take the shape of the org that built them."}, {"type": "sentence", "content": "So if Conway\u2019s Law isn\u2019t inherently bad, and it\u2019s inevitable anyway, why is \u201cshipping the org chart\u201d something that people usually say with derision? People perceive the org as being incorrectly defined to produce the product that the customer needs. So what is to be done about it?"}, {"type": "sentence", "content": "Let\u2019s start with what is often the first thing people think should be done: doing a reorg. There are definitely times where this is the right thing. For example, let\u2019s say that in our example above we had two teams that both thought they were fully responsible for chassis and body. Clearly that is going to result in conflict and almost certainly needs a reorg to fix. But let\u2019s say that one team was doing 90% of the chassis design and 10% of the bodywork, and another team was doing 90% of bodywork and 10% of chassis design. This is also likely to have some conflict, but some amount of overlap also may be beneficial \u2014 the first generation Dodge Viper was a disaster because the body designers insisted that the chassis be engineered to fit their design (as well as all of the other components) which resulted in a car that looked nearly identical to the concept car that wowed car show audiences, but handled terribly, overheated, and resulted in burns to the occupants legs on the exhaust when exiting. In that case, having more responsibility for some product aspects shared across teams may have been a good thing. The biggest logical flaw that I see when people are arguing for a reorg is summed up by the comedian Steven Wright:"}, {"type": "sentence", "content": "Fairly often I have a conversation with someone where they are agitating to move a bunch of teams together under another one. The problem is at some point you are recreating the existing structure, just in another part of the org. Using our car company example, if you moved all of the people from the other teams under the bodywork team, and flattened it, you\u2019d wind up with the same hypothetical 50 flat people that caused you to form your 5 teams initially \u2014 and you\u2019d likely reform it into 5ish teams. You might change the layout, but it probably doesn\u2019t fix whatever problem that made you want to move the teams in the first place. It\u2019s just shuffling. At some point with any large project you have to find a way to be successful without shuffling people \u2014 you have to make Conway\u2019s Law work for you not against you."}, {"type": "sentence", "content": "There are 5 things that you, as a software engineer, has to do well in order for large organizations to ship great products, assuming that the org structure is mostly right:"}, {"type": "sentence", "content": "Building any product that is the output of thousands of people is a huge undertaking. Getting it really right is hard. We need many teams working together to make it possible, but we also need to acknowledge that the complexity of that system can get in our way so that we can overcome it, not pretend it is a law that doesn\u2019t apply to us or that we can easily break."}], "topic": "artificial-intelligence"}