{"title": "Complete Architectural Details of all EfficientNet Models", "data": [{"type": "subtitle", "content": "Let\u2019s dive deep into the architectural details of all the different EfficientNet Models and find out how they differ from each other."}, {"type": "image", "content": "https://miro.medium.com/max/4940/0*34PlrpddgachPgag"}, {"type": "sentence", "content": "I was scrolling through notebooks in a Kaggle competition and found almost everyone was using EfficientNet as their backbone which I had not heard about till then. It is introduced by Google AI in this paper and they tried to propose a method that is more efficient as suggested by its name while improving the state of the art results. Generally, the models are made too wide, deep, or with a very high resolution. Increasing these characteristics helps the model initially but it quickly saturates and the model made just has more parameters and is therefore not efficient. In EfficientNet they are scaled in a more principled way i.e. gradually everything is increased."}, {"type": "image", "content": "https://miro.medium.com/max/2282/0*FJos7uXvl-uLDpSQ.png"}, {"type": "sentence", "content": "Did not understand what going on? Don\u2019t worry you will once you see the architecture. But first, let\u2019s see the results they got with this."}, {"type": "image", "content": "https://miro.medium.com/max/1324/0*09AED_CjE-PUFxKC.png"}, {"type": "sentence", "content": "With considerably fewer numbers of parameters, the family of models are efficient and also provide better results. So now we have seen why these might become the standard pre-trained model but something\u2019s missing. I remember an article by Raimi Karim where he showed the architectures of pre-trained models and that helped me a lot in understanding them and creating similar architectures."}, {"type": "sentence", "content": "As I could not find one like this on the net, I decided to understand it and create one for all of you."}, {"type": "subtitle", "content": "Common Things In All"}, {"type": "sentence", "content": "The first thing is any network is its stem after which all the experimenting with the architecture starts which is common in all the eight models and the final layers."}, {"type": "sentence", "content": "After this each of them contains 7 blocks. These blocks further have a varying number of sub-blocks whose number is increased as we move from EfficientNetB0 to EfficientNetB7. To have a look at the layers of the models in Colab write this code:"}, {"type": "sentence", "content": "If you count the total number of layers in EfficientNet-B0 the total is 237 and in EfficientNet-B7 the total comes out to 813!! But don\u2019t worry all these layers can be made from 5 modules shown below and the stem above."}, {"type": "sentence", "content": "These modules are further combined to form sub-blocks which will be used in a certain way in the blocks."}, {"type": "image", "content": "https://miro.medium.com/max/2126/1*snN5M6WXlqHVFAwi17H9Mw.png"}, {"type": "sentence", "content": "Till now we have specified everything that will be combined to create the EfficientNet models so let\u2019s get started."}, {"type": "subtitle", "content": "EfficientNet-B0"}, {"type": "subtitle", "content": "EfficientNet-B1"}, {"type": "subtitle", "content": "EfficientNet-B2"}, {"type": "sentence", "content": "Its architecture is the same as the above model the only difference between them is that the number of feature maps (channels) is varied that increases the number of parameters."}, {"type": "subtitle", "content": "EfficientNet-B3"}, {"type": "subtitle", "content": "EfficientNet-B4"}, {"type": "subtitle", "content": "EfficientNet-B5"}, {"type": "subtitle", "content": "EfficientNet-B6"}, {"type": "subtitle", "content": "EfficientNet-B7"}, {"type": "sentence", "content": "It\u2019s easy to see the difference among all the models and they gradually increased the number of sub-blocks. If you understood the architectures I will encourage you to take any model and print its summary and have a go through it to know it more thoroughly. The table shown below denotes the kernel size for convolution operations along with the resolution, channels, and layers in EfficientNet-B0."}, {"type": "image", "content": "https://miro.medium.com/max/2048/0*WP4AKPg1QsrMCKKO.png"}, {"type": "sentence", "content": "This table was included in the original paper. The resolution remains the same as for the whole family. I don\u2019t know about whether the kernel size changes or remains the same so if anyone knows leave a reply. The number of layers is already shown above in the figures. The number of channels varies and it is calculated from the information seen from each model\u2019s summary and is presented below (If you are using Mobile device then you will need to view it in landscape mode.)"}, {"type": "sentence", "content": "Medium does not has any format to make tables, so if you want to create tables like the one above you create ASCII tables from this site."}, {"type": "sentence", "content": "Before ending I have attached another image again from its research paper which shows its performance against the other state of the art techniques and also reduces the number of parameters and the number of FLOPS required."}, {"type": "image", "content": "https://miro.medium.com/max/3122/1*PTmdERX7H11aYT2P2gjJSQ.png"}, {"type": "sentence", "content": "If you want to create advanced CNN architectures like this or had problems understanding any of the layers or terms used don\u2019t worry, I have written an article that will solve these problems."}], "topic": "artificial-intelligence"}