{"title": "TensorFlow vs PyTorch \u2014 Linear Regression", "data": [{"type": "subtitle", "content": "Implementation of Linear Regression in both TensorFlow and PyTorch frameworks and comparison of their results"}, {"type": "sentence", "content": "If your are new to Deep Learning and Neural Networks, then you must have come across the terms \u201cTensorFlow\u201d and \u201cPyTorch\u201d. These are two popular Deep Learning frameworks that are used in the field of Data Science."}, {"type": "sentence", "content": "In this exercise, I will be showing you the implementation of the most simple Neural Network (Linear Regression) using both the frameworks and compare their results."}, {"type": "subtitle", "content": "Origin-"}, {"type": "sentence", "content": "PyTorch is an open source machine learning library based on the Torch library. PyTorch was primarily developed by Facebook\u2019s AI Research lab (FAIR). It is a free and open-source software."}, {"type": "sentence", "content": "On the other hand, TensorFlow was developed by the Google Brain team for internal Google research purpose. It is widely used for machine learning applications such as neural networks. It is also a free and open-source software."}, {"type": "image", "content": "https://miro.medium.com/max/1238/1*zwNPmOBLvkJ4RzAEWLnFCg.jpeg"}, {"type": "sentence", "content": "The most productive way of comparing two frameworks is to solve the same problem using both of them and analyzing their results. In this exercise, we shall perform Linear Regression using both TensorFlow and PyTorch frameworks and compare their results."}, {"type": "subtitle", "content": "Problem-"}, {"type": "sentence", "content": "We will be using a very simple example in this exercise. Here, we are given an array of numbers, x= [-1.0, 0.0, 1.0, 2.0, 3.0, 4.0] and y= [-3.0, -1.0, 1.0, 3.0, 5.0, 7.0]. The formula used in this is y = 2*x -1 , which is a Linear Regression."}, {"type": "sentence", "content": "On training a Linear Regression model using both the frameworks, we shall input a new value for x=10 and see what the model predicts for y."}, {"type": "subtitle", "content": "TensorFlow framework-"}, {"type": "sentence", "content": "First, we shall go through the TensorFlow framework."}, {"type": "sentence", "content": "This is the code to perform Linear Regression with TensorFlow using keras library. Let us go through each block of code in the above program."}, {"type": "sentence", "content": "In the first step, we will import the libraries."}, {"type": "sentence", "content": "In the next step, we design our model using the Sequential, which is a linear stack of layers. In this model, we use only one layer(neuron)."}, {"type": "sentence", "content": "In the second step, we define our optimizer and loss functions to train our Neural Network model. In this, we use the Stochastic Gradient Descent (SDG) optimizer and the Mean Squared Error (MSE) as our loss function."}, {"type": "sentence", "content": "After this step, we initialize our numbers with two variables \u201cxs\u201d and \u201cys\u201d."}, {"type": "sentence", "content": "In the last step, we fit our model to the variables \u201cxs\u201d and \u201cys\u201d. We train the model with 500 epochs."}, {"type": "sentence", "content": "In this final step, we predict the value for a new xs = 10. According to the formula, y=2*x-1, for xs=10, we get a value of 19. Let us now see what value our model created using the TensorFlow framework predicts."}, {"type": "sentence", "content": "We see that, we get a value close to 19 using the Linear Regression model designed using the TensorFlow Framework."}, {"type": "subtitle", "content": "PyTorch Framework-"}, {"type": "sentence", "content": "Let us now see the Linear Regression Model designed using PyTorch framework."}, {"type": "sentence", "content": "The PyTorch application of Linear Regression is indeed large and complex in comparison to the TensorFlow model. Let us analyze each step of the model."}, {"type": "sentence", "content": "In the first step, We import the required libraries for designing the Linear Regression model."}, {"type": "sentence", "content": "In the next step, we initialize the same values of \u201cxs\u201d and \u201cys\u201d as defined in the TensorFlow model. For the PyTorch application, we convert the list to a Tensor using the appropriate functions."}, {"type": "sentence", "content": "After this, we define a class \u2018LinearRegressionModel\u2019 that we will use to define our model. Since this is a Simple Linear Regression with 1 input and 1 output, we use a Linear model with both the input and output dimension equal to 1. Finally, we create a \u201cmodel\u201d using the above-defined class."}, {"type": "sentence", "content": "Next, we choose our optimizer and loss criterion. We chose the same functions as used for the TensorFlow application, i.e, the SDG function for optimizer and MSE for the loss function. Additionally, we arbitrarily fix a learning rate of 0.01."}, {"type": "sentence", "content": "We now arrive at our training step. In this stage, we perform three tasks for 500 iterations as we set the epoch value as 500."}, {"type": "sentence", "content": "Finally, we predict the value for a new xs=10 using this model. As described earlier, we must get a value close to 19. Let us now see what the PyTorch model outputs."}, {"type": "sentence", "content": "We see the the Linear Regression model built using the PyTorch framework also gives us a value that is close to 19."}, {"type": "subtitle", "content": "Comparision-"}, {"type": "sentence", "content": "On visualizing the results obtained from both TensorFlow and PyTorch models, we see that the TensorFlow model gave us a result of 18.979048 and the PyTorch model gave us a result of 18.999998092651367."}, {"type": "sentence", "content": "TensorFlow Model \u2014 18.979048"}, {"type": "sentence", "content": "PyTorch Model \u2014 18.999998092651367"}, {"type": "sentence", "content": "It is clearly seen that a very simple Neural Network built using the PyTorch framework has more accuracy than the model built using the TensorFlow framework. However, the PyTorch model is more complex in nature and difficult to understand for a beginner."}, {"type": "sentence", "content": "If you are completely new to Deep Learning and Neural Networks, I would suggest you all to start with the TensorFlow framework and then move to the PyTorch framework once you gain experience in the former."}, {"type": "sentence", "content": "I have attached a detailed version of the codes (.ipynb) for both the frameworks in my Github profile for your reference."}, {"type": "sentence", "content": "I hope that I was able to explain and demonstrate the implementation of a simple neural network (Linear Regression Model) using the two most popular frameworks that are used today in Deep Learning. Till then, Happy Machine Learning!"}], "topic": "artificial-intelligence"}