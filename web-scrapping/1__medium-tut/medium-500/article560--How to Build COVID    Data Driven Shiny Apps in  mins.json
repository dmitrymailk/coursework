{"title": "How to Build COVID-19 Data-Driven Shiny Apps in 5mins", "data": [{"type": "subtitle", "content": "Build shiny apps with COVID-19 Data Hub. A fully functioning example in 20 lines of code."}, {"type": "sentence", "content": "Note from the editors: Towards Data Science is a Medium publication primarily based on the study of data science and machine learning. We are not health professionals or epidemiologists, and the opinions of this article should not be interpreted as professional advice. To learn more about the coronavirus pandemic, you can click here."}, {"type": "image", "content": "https://miro.medium.com/max/726/1*avoRZUDQx4S935eHeJbt7A@2x.png"}, {"type": "sentence", "content": "Many databases exist in connection with COVID-19, but no virtual platform currently integrates a significant proportion of these sources. It then becomes difficult to make a global analysis, and to make connections between this often-medical information and external factors, notably socio-political. With this in mind, COVID-19 Data Hub aims to develop a unified dataset helpful for a better understanding of COVID-19."}, {"type": "sentence", "content": "In this tutorial, we are going to build a simple yet complete Shiny application using the R Package COVID19: R Interface to COVID-19 Data Hub."}, {"type": "sentence", "content": "A basic understanding of Shiny (web apps) and plotly (interactive plots) is assumed, but it is possible to build a fully functioning app simply by copy/paste. Load the following packages to get started:"}, {"type": "subtitle", "content": "COVID19"}, {"type": "sentence", "content": "The COVID19 R package provides a seamless imtegration with COVID-19 Data Hub via the covid19() function. Type ?covid19 for the full list of arguments. Here we are going to use:"}, {"type": "subtitle", "content": "Define UI"}, {"type": "sentence", "content": "Define the following inputs\u2026"}, {"type": "sentence", "content": "\u2026and the output:"}, {"type": "sentence", "content": "Wrap everything into a fluidPage:"}, {"type": "subtitle", "content": "Server logic"}, {"type": "sentence", "content": "After defining the reactive inputs in the UI, we connect such inputs to the covid19() function to fetch the data. The following code snippet shows how to render an interactive plot(ly) that automatically updates when any of the input is changed. Note that the covid19() function uses an internal memory caching system so that the data are never downloaded twice. Calling the function multiple times is highly efficient and user friendly."}, {"type": "subtitle", "content": "Run the application"}, {"type": "sentence", "content": "The functionshinyApp builds an app from the ui andserver arguments implemented above."}, {"type": "sentence", "content": "Available at https://guidotti.shinyapps.io/h83h5/"}, {"type": "subtitle", "content": "Final remarks"}, {"type": "sentence", "content": "We built a simple application interfacing Shiny with the R package COVID19, representing a general architecture that invites re-use. The sample app may be used as a building block for more advanced COVID-19 data-driven applications. In particular, the dataset available via the covid19() function includes additional metrics about COVID-19 cases, policy measures, geographic information, and external keys that allow to easily extend the dataset with World Bank Open Data, Google Mobility Reports, Apple Mobility Reports, and local governmental data. See the full dataset documentation and the COVID19 code snippets."}, {"type": "sentence", "content": "COVID-19 Data Hub is free software and comes with ABSOLUTELY NO WARRANTY. Please make sure to agree to the Terms of Use."}, {"type": "sentence", "content": "[1] E. Guidotti, D. Ardia, COVID-19 Data Hub (2020), Working paper"}], "topic": "data-science"}